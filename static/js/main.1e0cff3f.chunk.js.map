{"version":3,"sources":["type.d.ts","assets/search.svg","components/SearchAndFilter.tsx","assets/sort-desc.svg","assets/sort-asc.svg","assets/sort-inactive.svg","components/SortTriangle.tsx","components/Table.tsx","services/fetchFunction.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginationType","Gender","sortBy","sortOrder","SearchAndFilter","props","genderOptions","gender","keyword","handleOnSelectGender","handleOnClickResetButton","handleOnClickSearchButton","handleOnChangeInputForm","FilterContainer","FilterSection","Form","InputForm","placeholder","value","onChange","event","SearchButton","onClick","Search","src","SearchLogo","alt","GenderFilterSection","styles","genderSelectionStyle","options","ResetButton","styled","div","form","input","img","control","provided","width","height","cursor","indicatorSeparator","SortTriangle","sortType","DESC","sortStatus","Image","SortDescending","SortAscending","SortInactive","Table","randomUsers","activePage","handleOnChangePage","sort","handleOnClickSortButton","TableContainer","TableHeader","Cell","isHeader","NAME","EMAIL","GENDER","REGISTERED","TableBody","map","randomUser","name","title","first","last","CellRow","login","username","email","registered","date","renderTableBody","PaginationSelection","Paginated","DECREMENT","option","isActive","NUMBER","INCREMENT","fetchUserPaginated","payload","a","page","query","queryParams","querystring","stringify","url","config","method","headers","axios","data","console","log","results","error","App","useState","setRandomUsers","isLoading","setIsLoading","setActivePage","pageOptions","label","ALL","FEMALE","MALE","setGender","setKeyword","setSort","result","ASC","type","pageNumber","length","navigatePagePayload","componentDidMount","useEffect","Container","TitlePage","newKeywords","target","Separator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAyCYA,EAMAC,EAgBAC,IAKAC,I,4FCpEG,MAA0B,mC,eC6D1BC,EA7CS,SAACC,GAAiC,IAEtDC,EAOED,EAPFC,cACAC,EAMEF,EANFE,OACAC,EAKEH,EALFG,QACAC,EAIEJ,EAJFI,qBACAC,EAGEL,EAHFK,yBACAC,EAEEN,EAFFM,0BACAC,EACEP,EADFO,wBAEF,OACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,yCACA,eAACC,EAAD,WACE,cAACC,EAAD,CACEC,YAAY,YACZC,MAAOV,EACPW,SAAU,SAACC,GAAD,OACRR,EAAwBQ,MAG5B,cAACC,EAAD,CAAcC,QAASX,EAAvB,SACE,cAACY,EAAD,CAAQC,IAAKC,EAAYC,IAAI,wBAInC,eAACZ,EAAD,WACE,yCACA,eAACa,EAAD,WACE,cAAC,IAAD,CACEC,OAAQC,EACRC,QAASxB,EACTY,MAAOX,EACPY,SAAU,SAACD,GAAD,OAAgBT,EAAqBS,MAEjD,cAACa,EAAD,CAAaT,QAASZ,EAAtB,oCAWJG,EAAkBmB,IAAOC,IAAV,0JASfnB,EAAgBkB,IAAOC,IAAV,0JASbN,EAAsBK,IAAOC,IAAV,0HAOnBlB,EAAOiB,IAAOE,KAAV,qJAQJlB,EAAYgB,IAAOG,MAAV,kGAQTd,EAAeW,IAAOC,IAAV,oNAcZV,EAASS,IAAOI,IAAV,iDAINL,EAAcC,IAAOC,IAAV,yOAgBXJ,EAAuB,CAC3BQ,QAAS,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPC,MAAO,QACPC,OAAQ,OACRC,OAAQ,aAEVC,mBAAoB,iBAAO,M,SFxGjB1C,K,sBAAAA,E,sBAAAA,E,iBAAAA,M,cAMAC,K,OAAAA,E,YAAAA,E,iBAAAA,M,MAgBAC,Q,kBAAAA,E,gBAKAC,Q,iBAAAA,E,cAAAA,E,gBAAAA,E,wBGpEG,I,sBAAA,MAA0B,sCCA1B,MAA0B,qCCA1B,OAA0B,0CC4B1BwC,GAdM,SAACtC,GAA8B,IAAD,EACKA,EAA9CuC,gBADyC,MAC9B1C,EAAO2C,KADuB,IACKxC,EAAtByC,WAUhC,YAXiD,SAKpCF,IAAa1C,EAAO2C,KACtB,cAACE,GAAD,CAAOvB,IAAKwB,IAEZ,cAACD,GAAD,CAAOvB,IAAKyB,IAJZ,cAACF,GAAD,CAAOvB,IAAK0B,MAYnBH,GAAQf,IAAOI,IAAV,gDCuFIe,GAjGD,SAAC9C,GAAuB,IAElC+C,EAME/C,EANF+C,YACAC,EAKEhD,EALFgD,WACAvB,EAIEzB,EAJFyB,QACAwB,EAGEjD,EAHFiD,mBACAC,EAEElD,EAFFkD,KACAC,EACEnD,EADFmD,wBA2CF,OACE,eAACC,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CAAMC,UAAU,EAAhB,sBACA,eAACD,GAAD,CAAMC,UAAU,EAAhB,iBACO,IACL,qBAAKtC,QAAS,kBAAMkC,EAAwBrD,EAAU0D,OAAtD,SACE,cAAC,GAAD,CACEjB,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SAChBE,YAAgB,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMpD,aAAcA,EAAU0D,YAIhD,eAACF,GAAD,CAAMC,UAAU,EAAhB,kBAEE,qBAAKtC,QAAS,kBAAMkC,EAAwBrD,EAAU2D,QAAtD,SACE,cAAC,GAAD,CACElB,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SAChBE,YAAgB,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMpD,aAAcA,EAAU2D,aAIhD,eAACH,GAAD,CAAMC,UAAU,EAAhB,mBACS,IACP,qBAAKtC,QAAS,kBAAMkC,EAAwBrD,EAAU4D,SAAtD,SACE,cAAC,GAAD,CACEnB,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SAChBE,YAAgB,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMpD,aAAcA,EAAU4D,cAIhD,eAACJ,GAAD,CAAMC,UAAU,EAAhB,4BACkB,IAChB,qBAAKtC,QAAS,kBAAMkC,EAAwBrD,EAAU6D,aAAtD,SACE,cAAC,GAAD,CACEpB,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SAChBE,YAAgB,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMpD,aAAcA,EAAU6D,qBAKlD,cAACC,GAAD,UAlFoB,WACtB,GAAKb,EACL,OACE,0CACGA,QADH,IACGA,OADH,EACGA,EAAac,KAAI,SAACC,GACjB,IAAIC,EAAI,UAAMD,EAAWC,KAAKC,MAAtB,aAAgCF,EAAWC,KAAKE,MAAhD,YAAyDH,EAAWC,KAAKG,MACjF,OACE,eAACC,GAAD,WACE,cAACb,GAAD,UAAOQ,EAAWM,MAAMC,WACxB,eAACf,GAAD,WAAOS,EAAP,OACA,eAACT,GAAD,WAAOQ,EAAWQ,MAAlB,OACA,eAAChB,GAAD,WAAOQ,EAAW5D,OAAlB,OACA,eAACoD,GAAD,WAAOQ,EAAWS,WAAWC,KAA7B,eAsEIC,KACZ,cAACC,GAAD,UA7DA,qCACE,cAACC,GAAD,CAAW1D,QAAS,kBAAMgC,EAAmBtD,EAAeiF,YAA5D,SACG,MAEFnD,EAAQoC,KAAI,SAACgB,GAAD,OACX,cAACF,GAAD,CACEG,SAAU9B,IAAe6B,EACzB5D,QAAS,kBAAMgC,EAAmBtD,EAAeoF,OAAQF,IAF3D,SAIGA,OAGL,cAACF,GAAD,CAAW1D,QAAS,kBAAMgC,EAAmBtD,EAAeqF,YAA5D,SACG,eAuDL5B,GAAiBzB,IAAOC,IAAV,oKAWdyB,GAAc1B,IAAOC,IAAV,4IASXgC,GAAYjC,IAAOC,IAAV,+IASTuC,GAAUxC,IAAOC,IAAV,iLAWP8C,GAAsB/C,IAAOC,IAAV,8IASnB+C,GAAYhD,IAAOC,IAAV,mRAUJ,qBAAGkD,SAA2B,UAAY,aACnC,qBAAGA,SAA2B,UAAY,aAOtDxB,GAAO3B,IAAOC,IAAV,+KAGY,qBAAG2B,SAA2B,UAAY,aAK3C,qBAAGA,SACT,gBAAkB,gB,wCCtLpB0B,GAAkB,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,6DACxBC,EAA6CF,EAA7CE,KAAMlF,EAAuCgF,EAAvChF,OAAQC,EAA+B+E,EAA/B/E,QAASN,EAAsBqF,EAAtBrF,OAAQC,EAAcoF,EAAdpF,UACnCuF,EAA6B,CAAED,QAC/BlF,IAAQmF,EAAMnF,OAASA,GACvBC,IAASkF,EAAMlF,QAAUA,GACzBN,IAAQwF,EAAMxF,OAASA,GACvBC,IAAWuF,EAAMvF,UAAYA,GAE3BwF,EAAcC,KAAYC,UAAUH,GARV,SAUxBI,EAVwB,UAVlB,4BAUkB,YAUJH,EAVI,2BAWxBI,EAA6B,CACjCC,OAAQ,MACRF,MACAG,QAAS,CACP,eAAgB,qBAfU,UAkBPC,KAAMH,GAlBC,wBAkBtBI,EAlBsB,EAkBtBA,KACRC,QAAQC,IAAIF,GAnBkB,kBAoBvBA,EAAKG,SApBkB,kCAsB9BF,QAAQG,MAAR,MAtB8B,0DAAH,sDCmJhBC,OAlJf,WAAgB,IAAD,EACyBC,qBADzB,mBACNrD,EADM,KACOsD,EADP,OAEqBD,oBAAkB,GAFvC,mBAENE,EAFM,KAEKC,EAFL,OAGuBH,mBAAiB,GAHxC,mBAGNpD,EAHM,KAGMwD,EAHN,KAIPC,EAAc,CAAC,EAAG,EAAG,GACrBxG,EAAgB,CACpB,CAAEyG,MAAO,MAAO7F,MAAOjB,EAAO+G,KAC9B,CAAED,MAAO,SAAU7F,MAAOjB,EAAOgH,QACjC,CAAEF,MAAO,OAAQ7F,MAAOjB,EAAOiH,OARpB,EAUeT,mBAAiBnG,EAAc,IAV9C,mBAUNC,EAVM,KAUE4G,EAVF,OAWiBV,mBAAiB,IAXlC,mBAWNjG,EAXM,KAWG4G,EAXH,OAYWX,mBAA0B,MAZrC,mBAYNlD,EAZM,KAYA8D,EAZA,KAcP5G,EAAoB,uCAAG,WAAOyE,GAAP,iBAAAM,EAAA,6DAC3BoB,GAAa,GACbO,EAAUjC,GACJK,EAAU,CACdE,KAAM,EACNjF,QAASA,EACTD,OAAQ2E,EAAOhE,MACfhB,OAAM,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SACdzC,UAAS,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,WARQ,SAUNmF,GAAmBC,GAVb,OAUrB+B,EAVqB,OAW3BZ,EAAeY,GACfV,GAAa,GAZc,2CAAH,sDAoBpBjG,EAAyB,uCAAG,8BAAA6E,EAAA,6DAChCoB,GAAa,GACPrB,EAAU,CACdE,KAAM,EACNjF,QAASA,EACTD,OAAQA,EAAOW,MACfhB,OAAM,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SACdzC,UAAS,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,WAPa,SASXmF,GAAmBC,GATR,OAS1B+B,EAT0B,OAUhCZ,EAAeY,GACfV,GAAa,GAXmB,2CAAH,qDAoBzBpD,EAAuB,uCAAG,WAAOrD,GAAP,mBAAAqF,EAAA,6DAC1B5C,EAAW1C,EAAOqH,IAClBpH,KAAS,OAAKoD,QAAL,IAAKA,OAAL,EAAKA,EAAMpD,aACtByC,EAAWW,EAAKX,WAAa1C,EAAOqH,IAAMrH,EAAO2C,KAAO3C,EAAOqH,KACjEF,EAAQ,CACNzE,WACAzC,cAEFyG,GAAa,GACPrB,EAAU,CACdE,KAAM,EACNjF,QAASA,EACTD,OAAQA,EAAOW,MACfhB,OAAQ0C,EACRzC,UAAWA,GAdiB,SAgBTmF,GAAmBC,GAhBV,OAgBxB+B,EAhBwB,OAiB9BZ,EAAeY,GACfV,GAAa,GAlBiB,4CAAH,sDAqBvBtD,EAAkB,uCAAG,WAAOkE,EAAc/B,GAArB,mBAAAD,EAAA,sDACzBoB,GAAa,GACTa,EAAa,EAFQ,KAGjBD,EAHiB,cAIlBxH,EAAeqF,UAJG,SASlBrF,EAAeiF,UATG,sBAKjB5B,IAAeyD,EAAY,GALV,wDAMrBW,EAAapE,EAAa,EAC1BwD,EAAcxD,EAAa,GAPN,gCAUjBA,IAAeyD,EAAYA,EAAYY,OAAS,GAV/B,0DAWrBD,EAAapE,EAAa,EAC1BwD,EAAcxD,EAAa,GAZN,6BAerBoE,EAAahC,EACboB,EAAcpB,GAhBO,eAkBnBkC,EAAsB,CAC1BlC,KAAMgC,EACNjH,QAASA,EACTD,OAAQA,EAAOW,MACfhB,OAAM,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SACdzC,UAAS,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,WAvBM,UAyBJmF,GAAmBqC,GAzBf,QAyBnBL,EAzBmB,OA0BzBZ,EAAeY,GACfV,GAAa,GA3BY,4CAAH,wDA8BlBgB,EAAiB,uCAAG,4BAAApC,EAAA,6DACxBoB,GAAa,GADW,SAGHtB,GAAmB,CAAEG,KAAM,IAHxB,OAGlB6B,EAHkB,OAIxBZ,EAAeY,GACfV,GAAa,GALW,2CAAH,qDAYvB,OAJAiB,qBAAU,WACRD,MACC,IAGD,eAACE,GAAD,WACE,cAACC,GAAD,6CACA,cAAC,EAAD,CACEzH,cAAeA,EACfC,OAAQA,EACRC,QAASA,EACTC,qBAAsBA,EACtBC,yBA7E2B,WAC/ByG,EAAU7G,EAAc,IACxB8G,EAAW,IACXC,EAAQ,OA2EJ1G,0BAA2BA,EAC3BC,wBAlG0B,SAACQ,GAC/B,IAAM4G,EAAc5G,EAAM6G,OAAO/G,MACjCkG,EAAWY,MAkGT,cAACE,GAAD,IACCvB,KAAa,OAACvD,QAAD,IAACA,OAAD,EAACA,EAAasE,QAC1B,kDAEA,cAAC,GAAD,CACEtE,YAAaA,EACbC,WAAYA,EACZvB,QAASgF,EACTvD,KAAMA,EACND,mBAAoBA,EACpBE,wBAAyBA,QAS7BsE,GAAY9F,IAAOC,IAAV,iLAWT8F,GAAY/F,IAAOC,IAAV,oHAOTiG,GAAYlG,IAAOC,IAAV,qFCtKAkG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.1e0cff3f.chunk.js","sourcesContent":["export interface RandomUser {\n  cell: string;\n  dob: DateOfBirth;\n  id: any;\n  login: Login;\n  nat: string;\n  phone: string;\n  picture: any;\n  location: any;\n  name: Name;\n  email: string;\n  gender: string;\n  registered: Registered;\n}\n\ninterface DateOfBirth {\n  date: string;\n  age: number;\n}\n\ninterface Name {\n  title: string;\n  first: string;\n  last: string;\n}\n\ninterface Login {\n  uuid: string;\n  username: string;\n  password: string;\n  salt: string;\n  md5: string;\n  sha1: string;\n  sha256: string;\n}\n\ninterface Registered {\n  date: string;\n  age: number;\n}\n\nexport enum PaginationType {\n  INCREMENT = \"INCREMENT\",\n  DECREMENT = \"DECREMENT\",\n  NUMBER = \"NUMBER\",\n}\n\nexport enum Gender {\n  ALL = \"\",\n  MALE = \"male\",\n  FEMALE = \"female\",\n}\n\nexport interface Option {\n  label: string;\n  value: any;\n}\n\nexport interface SortInfo {\n  sortType: sortBy.ASC | sortBy.DESC;\n  sortOrder: string;\n}\n\nexport enum sortBy {\n  ASC = \"ascend\",\n  DESC = \"descend\",\n}\n\nexport enum sortOrder {\n  NAME = \"name\",\n  EMAIL = \"email\",\n  GENDER = \"gender\",\n  REGISTERED = \"registered\",\n}\n","export default __webpack_public_path__ + \"static/media/search.b25b4e95.svg\";","import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\nimport SearchLogo from \"../assets/search.svg\";\nimport Select from \"react-select\";\nimport { Option } from \"../type\";\n\ninterface SearchAndFilterProps {\n  genderOptions: Option[];\n  gender: Option;\n  keyword: string;\n  handleOnSelectGender: (option: Option) => void;\n  handleOnClickResetButton: () => void;\n  handleOnClickSearchButton: () => void;\n  handleOnChangeInputForm: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SearchAndFilter = (props: SearchAndFilterProps) => {\n  const {\n    genderOptions,\n    gender,\n    keyword,\n    handleOnSelectGender,\n    handleOnClickResetButton,\n    handleOnClickSearchButton,\n    handleOnChangeInputForm,\n  } = props;\n  return (\n    <FilterContainer>\n      <FilterSection>\n        <div>Search</div>\n        <Form>\n          <InputForm\n            placeholder=\"Search...\"\n            value={keyword}\n            onChange={(event: ChangeEvent<HTMLInputElement>) =>\n              handleOnChangeInputForm(event)\n            }\n          />\n          <SearchButton onClick={handleOnClickSearchButton}>\n            <Search src={SearchLogo} alt=\"search-logo\" />\n          </SearchButton>\n        </Form>\n      </FilterSection>\n      <FilterSection>\n        <div>Gender</div>\n        <GenderFilterSection>\n          <Select\n            styles={genderSelectionStyle}\n            options={genderOptions}\n            value={gender}\n            onChange={(value: any) => handleOnSelectGender(value)}\n          />\n          <ResetButton onClick={handleOnClickResetButton}>\n            Reset Filter\n          </ResetButton>\n        </GenderFilterSection>\n      </FilterSection>\n    </FilterContainer>\n  );\n};\n\nexport default SearchAndFilter;\n\nconst FilterContainer = styled.div`\n  margin: 1rem 0 3rem 0;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FilterSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  margin-right: 1rem;\n`;\n\nconst GenderFilterSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid gray;\n`;\n\nconst InputForm = styled.input`\n  height: 2rem;\n  width: 15rem;\n\n  cursor: text;\n  border: none;\n`;\n\nconst SearchButton = styled.div`\n  background-color: blue;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  height: 2.2rem;\n  width: 2.2rem;\n\n  cursor: pointer;\n`;\n\nconst Search = styled.img`\n  max-height: 1rem;\n`;\n\nconst ResetButton = styled.div`\n  border: 1px solid gray;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 2.3rem;\n  width: 8rem;\n  margin-left: 1rem;\n\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n\nconst genderSelectionStyle = {\n  control: (provided: any) => ({\n    ...provided,\n    width: \"10rem\",\n    height: \"2rem\",\n    cursor: \"pointer\",\n  }),\n  indicatorSeparator: () => ({}),\n};\n","export default __webpack_public_path__ + \"static/media/sort-desc.f4e20a6c.svg\";","export default __webpack_public_path__ + \"static/media/sort-asc.178668ac.svg\";","export default __webpack_public_path__ + \"static/media/sort-inactive.7cbf9c4f.svg\";","import React from \"react\";\nimport SortDescending from \"../assets/sort-desc.svg\";\nimport SortAscending from \"../assets/sort-asc.svg\";\nimport SortInactive from \"../assets/sort-inactive.svg\";\nimport { sortBy } from \"../type.d\";\nimport styled from \"styled-components\";\n\ninterface SortTriangleProps {\n  sortType?: SortType;\n  sortStatus?: boolean;\n}\n\ntype SortType = sortBy.ASC | sortBy.DESC;\n\nconst SortTriangle = (props: SortTriangleProps) => {\n  const { sortType = sortBy.DESC, sortStatus = true } = props;\n  const renderSort = () => {\n    if (!sortStatus) {\n      return <Image src={SortInactive} />;\n    } else if (sortType === sortBy.DESC) {\n      return <Image src={SortDescending} />;\n    } else {\n      return <Image src={SortAscending} />;\n    }\n  };\n  return renderSort();\n};\n\nexport default SortTriangle;\n\nconst Image = styled.img`\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  PaginationType,\n  RandomUser,\n  sortOrder,\n  SortInfo,\n  sortBy,\n} from \"../type.d\";\nimport SortTriangle from \"./SortTriangle\";\n\ninterface TableProps {\n  randomUsers: RandomUser[];\n  activePage: number;\n  options: number[];\n  handleOnChangePage: (type: string, page?: number) => void;\n  sort: SortInfo | null;\n  handleOnClickSortButton: (sortOrder: string) => void;\n}\n\nconst Table = (props: TableProps) => {\n  const {\n    randomUsers,\n    activePage,\n    options,\n    handleOnChangePage,\n    sort,\n    handleOnClickSortButton,\n  } = props;\n  const renderTableBody = () => {\n    if (!randomUsers) return;\n    return (\n      <>\n        {randomUsers?.map((randomUser: RandomUser) => {\n          let name = `${randomUser.name.title}. ${randomUser.name.first} ${randomUser.name.last}`;\n          return (\n            <CellRow>\n              <Cell>{randomUser.login.username}</Cell>\n              <Cell>{name} </Cell>\n              <Cell>{randomUser.email} </Cell>\n              <Cell>{randomUser.gender} </Cell>\n              <Cell>{randomUser.registered.date} </Cell>\n            </CellRow>\n          );\n        })}\n      </>\n    );\n  };\n\n  const renderPaginatedSelection = () => {\n    return (\n      <>\n        <Paginated onClick={() => handleOnChangePage(PaginationType.DECREMENT)}>\n          {\"<\"}\n        </Paginated>\n        {options.map((option: number) => (\n          <Paginated\n            isActive={activePage === option}\n            onClick={() => handleOnChangePage(PaginationType.NUMBER, option)}\n          >\n            {option}\n          </Paginated>\n        ))}\n        <Paginated onClick={() => handleOnChangePage(PaginationType.INCREMENT)}>\n          {\">\"}\n        </Paginated>\n      </>\n    );\n  };\n\n  return (\n    <TableContainer>\n      <TableHeader>\n        <Cell isHeader={true}>Username</Cell>\n        <Cell isHeader={true}>\n          Name{\" \"}\n          <div onClick={() => handleOnClickSortButton(sortOrder.NAME)}>\n            <SortTriangle\n              sortType={sort?.sortType}\n              sortStatus={sort?.sortOrder === sortOrder.NAME}\n            />\n          </div>\n        </Cell>\n        <Cell isHeader={true}>\n          Email\n          <div onClick={() => handleOnClickSortButton(sortOrder.EMAIL)}>\n            <SortTriangle\n              sortType={sort?.sortType}\n              sortStatus={sort?.sortOrder === sortOrder.EMAIL}\n            />\n          </div>\n        </Cell>\n        <Cell isHeader={true}>\n          Gender{\" \"}\n          <div onClick={() => handleOnClickSortButton(sortOrder.GENDER)}>\n            <SortTriangle\n              sortType={sort?.sortType}\n              sortStatus={sort?.sortOrder === sortOrder.GENDER}\n            />\n          </div>\n        </Cell>\n        <Cell isHeader={true}>\n          Registered Date{\" \"}\n          <div onClick={() => handleOnClickSortButton(sortOrder.REGISTERED)}>\n            <SortTriangle\n              sortType={sort?.sortType}\n              sortStatus={sort?.sortOrder === sortOrder.REGISTERED}\n            />\n          </div>\n        </Cell>\n      </TableHeader>\n      <TableBody>{renderTableBody()}</TableBody>\n      <PaginationSelection>{renderPaginatedSelection()}</PaginationSelection>\n    </TableContainer>\n  );\n};\n\nexport default Table;\n\nconst TableContainer = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  margin: 2rem 0;\n`;\n\nconst TableHeader = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TableBody = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CellRow = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  border-bottom: 1px solid black;\n`;\n\nconst PaginationSelection = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst Paginated = styled.div<{ isActive?: boolean }>`\n  width: 2rem;\n  height: 2rem;\n  margin: 0.5rem 0.5rem;\n\n  cursor: pointer;\n\n  border: 1px solid #fafafa;\n  border-radius: 3px;\n\n  color: ${({ isActive }) => (isActive ? \"#574FCF\" : \"#000000\")};\n  border-color: ${({ isActive }) => (isActive ? \"#574FCF\" : \"#000000\")};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Cell = styled.div<{ isHeader?: boolean }>`\n  width: 20%;\n  height: 100%;\n  background-color: ${({ isHeader }) => (isHeader ? \"#fafafa\" : \"#ffffff\")};\n\n  padding: 1rem;\n\n  display: flex;\n  justify-content: ${({ isHeader }) =>\n    isHeader ? \"space-between\" : \"flex-start\"};\n  align-items: center;\n`;\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport querystring, { ParsedUrlQueryInput } from \"querystring\";\n\nconst baseURL = \"https://randomuser.me/api\";\n\ninterface Payload {\n  page: number;\n  gender?: string;\n  keyword?: string;\n  sortBy?: string;\n  sortOrder?: string;\n}\n\nexport const fetchUserPaginated = async (payload: Payload) => {\n  const { page, gender, keyword, sortBy, sortOrder } = payload;\n  let query: ParsedUrlQueryInput = { page };\n  if (gender) query.gender = gender;\n  if (keyword) query.keyword = keyword;\n  if (sortBy) query.sortBy = sortBy;\n  if (sortOrder) query.sortOrder = sortOrder;\n\n  const queryParams = querystring.stringify(query);\n  try {\n    const url = `${baseURL}?${queryParams}&pageSize=10&results=10`;\n    const config: AxiosRequestConfig = {\n      method: \"get\",\n      url,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios(config);\n    console.log(data);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SearchAndFilter from \"./components/SearchAndFilter\";\nimport Table from \"./components/Table\";\nimport { fetchUserPaginated } from \"./services/fetchFunction\";\nimport {\n  Gender,\n  Option,\n  PaginationType,\n  RandomUser,\n  sortBy,\n  SortInfo,\n} from \"./type.d\";\n\nfunction App() {\n  const [randomUsers, setRandomUsers] = useState<RandomUser[]>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [activePage, setActivePage] = useState<number>(1);\n  const pageOptions = [1, 2, 3];\n  const genderOptions = [\n    { label: \"All\", value: Gender.ALL },\n    { label: \"female\", value: Gender.FEMALE },\n    { label: \"male\", value: Gender.MALE },\n  ];\n  const [gender, setGender] = useState<Option>(genderOptions[0]);\n  const [keyword, setKeyword] = useState<string>(\"\");\n  const [sort, setSort] = useState<SortInfo | null>(null);\n\n  const handleOnSelectGender = async (option: Option) => {\n    setIsLoading(true);\n    setGender(option);\n    const payload = {\n      page: 1,\n      keyword: keyword,\n      gender: option.value,\n      sortBy: sort?.sortType,\n      sortOrder: sort?.sortOrder,\n    };\n    const result = await fetchUserPaginated(payload);\n    setRandomUsers(result);\n    setIsLoading(false);\n  };\n\n  const handleOnChangeInputForm = (event: any) => {\n    const newKeywords = event.target.value;\n    setKeyword(newKeywords);\n  };\n\n  const handleOnClickSearchButton = async () => {\n    setIsLoading(true);\n    const payload = {\n      page: 1,\n      keyword: keyword,\n      gender: gender.value,\n      sortBy: sort?.sortType,\n      sortOrder: sort?.sortOrder,\n    };\n    const result = await fetchUserPaginated(payload);\n    setRandomUsers(result);\n    setIsLoading(false);\n  };\n\n  const handleOnClickResetButton = () => {\n    setGender(genderOptions[0]);\n    setKeyword(\"\");\n    setSort(null);\n  };\n\n  const handleOnClickSortButton = async (sortOrder: string) => {\n    let sortType = sortBy.ASC;\n    if (sortOrder === sort?.sortOrder)\n      sortType = sort.sortType === sortBy.ASC ? sortBy.DESC : sortBy.ASC;\n    setSort({\n      sortType,\n      sortOrder,\n    });\n    setIsLoading(true);\n    const payload = {\n      page: 1,\n      keyword: keyword,\n      gender: gender.value,\n      sortBy: sortType,\n      sortOrder: sortOrder,\n    };\n    const result = await fetchUserPaginated(payload);\n    setRandomUsers(result);\n    setIsLoading(false);\n  };\n\n  const handleOnChangePage = async (type: string, page?: number) => {\n    setIsLoading(true);\n    let pageNumber = 0;\n    switch (type) {\n      case PaginationType.INCREMENT:\n        if (activePage === pageOptions[0]) return;\n        pageNumber = activePage + 1;\n        setActivePage(activePage + 1);\n        break;\n      case PaginationType.DECREMENT:\n        if (activePage === pageOptions[pageOptions.length - 1]) return;\n        pageNumber = activePage - 1;\n        setActivePage(activePage - 1);\n        break;\n      default:\n        pageNumber = page!;\n        setActivePage(page!);\n    }\n    const navigatePagePayload = {\n      page: pageNumber,\n      keyword: keyword,\n      gender: gender.value,\n      sortBy: sort?.sortType,\n      sortOrder: sort?.sortOrder,\n    };\n    const result = await fetchUserPaginated(navigatePagePayload);\n    setRandomUsers(result);\n    setIsLoading(false);\n  };\n\n  const componentDidMount = async () => {\n    setIsLoading(true);\n    // default GET first page\n    const result = await fetchUserPaginated({ page: 1 });\n    setRandomUsers(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    componentDidMount();\n  }, []);\n\n  return (\n    <Container>\n      <TitlePage>EXAMPLE WITH SEARCH AND FILTER</TitlePage>\n      <SearchAndFilter\n        genderOptions={genderOptions}\n        gender={gender}\n        keyword={keyword}\n        handleOnSelectGender={handleOnSelectGender}\n        handleOnClickResetButton={handleOnClickResetButton}\n        handleOnClickSearchButton={handleOnClickSearchButton}\n        handleOnChangeInputForm={handleOnChangeInputForm}\n      />\n      <Separator />\n      {isLoading || !randomUsers?.length ? (\n        <>Loading...</>\n      ) : (\n        <Table\n          randomUsers={randomUsers}\n          activePage={activePage}\n          options={pageOptions}\n          sort={sort}\n          handleOnChangePage={handleOnChangePage}\n          handleOnClickSortButton={handleOnClickSortButton}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  padding: 2rem;\n`;\n\nconst TitlePage = styled.div`\n  font-size: 1.5rem;\n  line-height: 2rem;\n  font-weight: 600;\n  font-style: normal;\n`;\n\nconst Separator = styled.div`\n  height: 0;\n  border: 1px solid gray;\n  width: 100%;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}